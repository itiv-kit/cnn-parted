constraints: {max_out_size: 2000000,  max_memory_size: 60000000, word_width: 16}
optimization-objectives:
  component: 0
  metric: latency

neural-network:
  name: resnet50
  input-size: [ 1, 3, 224, 224 ]

accuracy:
  device : "cuda"
  bits: [16, 8] # eyeriss 16-bit, simba 8-bit
  calibration:
    samples: null # null sets samples to all
    file: './calibrations/resnet50_quant_calib.pkl'
  retraining:
    epochs: 2
  datasets:
    calibrate:
      type: imagenet
      kind: 'imagefolder'
      path: '/tools/datasets/imagenet/val_images'
      sample_limit: null # number of validation dataset samples to test for each individual
      batch_size: 64
      randomize: False
    validation:
      type: imagenet
      kind: 'imagefolder'
      path: '/tools/datasets/imagenet/val_images'
      sample_limit: 8192 # number of validation dataset samples to test for each individual
      batch_size: 256
      randomize: False
    train:
      type: imagenet
      kind: 'webdataset'
      path: '/tools/datasets/imagenet/train/imagenet-train-{0000..0136}.tar'
      total_samples: 1281167
      batch_size: 256
      sample_limit: null

components:
  - id: 0
    max_memory_size: 600000000
    name: sensor #optional
    timeloop:
      accelerator: eyeriss_like
      frequency: 200000000
      layer: conv2d
      mapper:
        algorithm: linear-pruned
        live-status: false
        num-threads: 8
        timeout: 0
        victory-condition: 100
  - id: 1
    max_out_size: 150000000
    data_bit_width: 16
    ethernet:
      cable_len_m: 5
      eee_lmi_ratio: 0.1
      eee_toff_ms: 0
      enable_eee: false
      eth_mode: BASE1000-T
    fps: 25
  - id: 2
    max_memory_size: 600000000
    timeloop:
      accelerator: simba_like
      frequency: 200000000
      layer: conv2d
      mapper:
        algorithm: linear-pruned
        live-status: false
        num-threads: 8
        timeout: 0
        victory-condition: 100
